java quiz : https://www.tutorialspoint.com/java/java_online_quiz.htm

playground : https://www.tutorialspoint.com/compile_java_online.php

primitive type vs reference type : http://inetizenseo.tistory.com/12

Q - What of the following is the default value of a local variable? (D)
    A - null
    B - 0
    C - Depends upon the type of variable
    D - Not assigned

Local variables are not assigned any value by default.

Q - Can we have two public classes in one java file? (B)
    A - True
    B - False

No, a java file can contain only one public class.


Q - Which of the following stands true about default modifier of class members? (C)

A - By default, variables, methods and constructors can be accessed by subclass only.
B - By default, variables, methods and constructors can be accessed by any class lying in any package.
C - By default, variables, methods and constructors can be accessed by any class lying in the same package.
D - None of the above.

By default, variables, methods and constructors can be accessed by any class lying in the same package.

Q - What is instance variable? (C)

A - Instance variables are static variables within a class but outside any method.
B - Instance variables are variables defined inside methods, constructors or blocks.
C - Instance variables are variables within a class but outside any method.
D - None of the above.

Instance variables are variables within a class but outside any method. These variables are instantiated when the class is loaded.


Q - What is true about a final class? (D)

A - class declard final is a final class.
B - Final classes are created so the methods implemented by that class cannot be overridden.
C - It can't be inherited.
D - All of the above.

Final classes are created so the methods implemented by that class cannot be overridden. It can't be inherited. These classes are declared final.

Q - What is Serialization? (B)

A - Serialization is the process of writing the state of an object to another object.
B - Serialization is the process of writing the state of an object to a byte stream.
C - Both of the above.
D - None of the above.

Serialization is the process of writing the state of an object to a byte stream.

Q - What is runtime polymorphism? (A)

A - Runtime polymorphism is a process in which a call to an overridden method is resolved at runtime rather than at compile-time.
B - Runtime polymorphism is a process in which a call to an overloaded method is resolved at runtime rather than at compile-time.
C - Both of the above.
D - None of the above.

Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass.

Q - What is currentThread()? (A)

A - It is a Thread public static method used to obtain a reference to the current thread.
B - It is a thread's instance method used to get thread count.
C - It is a object's public static method used obtain a reference to the current thread.
D - It is a object's instance method used to get thread count.

currentThread() is a public static method of Thread class used to obtain a reference to the current thread.

Q - What of the following is the default value of an instance variable? (C)

A - null
B - 0
C - Depends upon the type of variable
D - Not assigned

Q - What is function overloading?

A - Methods with same name but different parameters.
B - Methods with same name but different return types.
C - Methods with same name, same parameter types but different parameter names.
D - None of the abov

If a class has multiple functions by same name but different parameters, it is known as Method Overloading.

Q - What is synchronization? (A)

A - Synchronization is the capability to control the access of multiple threads to shared resources.
B - Synchronization is the process of writing the state of an object to another object.
C - Synchronization is the process of writing the state of an object to byte stream.
D - None of the above.

Synchronization is the capability to control the access of multiple threads to shared resources. synchronized keyword in java provides locking which ensures mutual exclusive access of shared resource and prevent data race.

Q - What is runtime polymorphism? (A)

A - Runtime polymorphism is a process in which a call to an overridden method is resolved at runtime rather than at compile-time.
B - Runtime polymorphism is a process in which a call to an overloaded method is resolved at runtime rather than at compile-time.
C - Both of the above.
D - None of the above.

Runtime polymorphism or dynamic method dispatch is a process in which a call to an overridden method is resolved at runtime rather than at compile-time. In this process, an overridden method is called through the reference variable of a superclass.

Q - Which of the following is Faster, StringBuilder or StringBuffer? (A)

A - StringBuilder
B - StringBuffer
C - Both of the above.
D - none of the above.

StringBuilder is faster than StringBuffer.

Q - Can we compare int variable with a boolean variable? (B)
A - True
B - False

True, Compile time error will occur if an int variable is compared with Boolean variable.

Q - What is the default value of byte variable? (A)
A - 0
B - 0.0
C - null
D - not defined

Byte variable has default value of 0 if defined as an instance/static variable.


Q - What is the default value of Boolean variable? (B)
A - true
B - false
C - null
D - not defined

boolean variable has default value of false if defined as an instance/static variable

Q - Dynamic binding uses which information for binding? (B)
A - type.
B - object.
C - Both of the above.
D - None of the above.

Dynamic binding uses object information for binding.


Q - Which is the way in which a thread can enter the waiting state? (D)
A - Invoke its sleep() method.
B - invoke object's wait method.
C - Invoke its suspend() method.
D - All of the above

A thread can enter the waiting state by invoking its sleep() method, by blocking on IO, by unsuccessfully attempting to acquire an object's lock, or by invoking an object's wait() method. It can also enter the waiting state by invoking its (deprecated) suspend() method.

